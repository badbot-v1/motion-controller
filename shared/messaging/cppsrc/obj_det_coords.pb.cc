// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obj_det_coords.proto

#include "obj_det_coords.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_obj_5fdet_5fcoords_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Coords_obj_5fdet_5fcoords_2eproto;
namespace badbot {
namespace messages {
class CoordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Coords> _instance;
} _Coords_default_instance_;
class ObjectDetectionCoordsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectDetectionCoords> _instance;
} _ObjectDetectionCoords_default_instance_;
}  // namespace messages
}  // namespace badbot
static void InitDefaultsscc_info_Coords_obj_5fdet_5fcoords_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::badbot::messages::_Coords_default_instance_;
    new (ptr) ::badbot::messages::Coords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::badbot::messages::Coords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Coords_obj_5fdet_5fcoords_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_Coords_obj_5fdet_5fcoords_2eproto}, {}};

static void InitDefaultsscc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::badbot::messages::_ObjectDetectionCoords_default_instance_;
    new (ptr) ::badbot::messages::ObjectDetectionCoords();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::badbot::messages::ObjectDetectionCoords::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto}, {
      &scc_info_Coords_obj_5fdet_5fcoords_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_obj_5fdet_5fcoords_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_obj_5fdet_5fcoords_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_obj_5fdet_5fcoords_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_obj_5fdet_5fcoords_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, y_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, x_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, h_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, w_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, confidence_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::Coords, objid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::badbot::messages::ObjectDetectionCoords, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::badbot::messages::ObjectDetectionCoords, coordinates_),
  PROTOBUF_FIELD_OFFSET(::badbot::messages::ObjectDetectionCoords, object_at_angle_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::badbot::messages::Coords)},
  { 11, -1, sizeof(::badbot::messages::ObjectDetectionCoords)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::badbot::messages::_Coords_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::badbot::messages::_ObjectDetectionCoords_default_instance_),
};

const char descriptor_table_protodef_obj_5fdet_5fcoords_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024obj_det_coords.proto\022\017badbot.messages\""
  "W\n\006Coords\022\t\n\001y\030\001 \001(\005\022\t\n\001x\030\002 \001(\005\022\t\n\001h\030\003 \001"
  "(\005\022\t\n\001w\030\004 \001(\005\022\022\n\nconfidence\030\005 \001(\005\022\r\n\005obj"
  "Id\030\006 \001(\005\"^\n\025ObjectDetectionCoords\022,\n\013coo"
  "rdinates\030\001 \003(\0132\027.badbot.messages.Coords\022"
  "\027\n\017object_at_angle\030\002 \001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_obj_5fdet_5fcoords_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_obj_5fdet_5fcoords_2eproto_sccs[2] = {
  &scc_info_Coords_obj_5fdet_5fcoords_2eproto.base,
  &scc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_obj_5fdet_5fcoords_2eproto_once;
static bool descriptor_table_obj_5fdet_5fcoords_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_obj_5fdet_5fcoords_2eproto = {
  &descriptor_table_obj_5fdet_5fcoords_2eproto_initialized, descriptor_table_protodef_obj_5fdet_5fcoords_2eproto, "obj_det_coords.proto", 232,
  &descriptor_table_obj_5fdet_5fcoords_2eproto_once, descriptor_table_obj_5fdet_5fcoords_2eproto_sccs, descriptor_table_obj_5fdet_5fcoords_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_obj_5fdet_5fcoords_2eproto::offsets,
  file_level_metadata_obj_5fdet_5fcoords_2eproto, 2, file_level_enum_descriptors_obj_5fdet_5fcoords_2eproto, file_level_service_descriptors_obj_5fdet_5fcoords_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_obj_5fdet_5fcoords_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_obj_5fdet_5fcoords_2eproto), true);
namespace badbot {
namespace messages {

// ===================================================================

void Coords::InitAsDefaultInstance() {
}
class Coords::_Internal {
 public:
};

Coords::Coords()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:badbot.messages.Coords)
}
Coords::Coords(const Coords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&y_, &from.y_,
    static_cast<size_t>(reinterpret_cast<char*>(&objid_) -
    reinterpret_cast<char*>(&y_)) + sizeof(objid_));
  // @@protoc_insertion_point(copy_constructor:badbot.messages.Coords)
}

void Coords::SharedCtor() {
  ::memset(&y_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objid_) -
      reinterpret_cast<char*>(&y_)) + sizeof(objid_));
}

Coords::~Coords() {
  // @@protoc_insertion_point(destructor:badbot.messages.Coords)
  SharedDtor();
}

void Coords::SharedDtor() {
}

void Coords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Coords& Coords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Coords_obj_5fdet_5fcoords_2eproto.base);
  return *internal_default_instance();
}


void Coords::Clear() {
// @@protoc_insertion_point(message_clear_start:badbot.messages.Coords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&y_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objid_) -
      reinterpret_cast<char*>(&y_)) + sizeof(objid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Coords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 y = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 h = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 w = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 confidence = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          confidence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 objId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          objid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Coords::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:badbot.messages.Coords)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 y = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 h = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 w = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 confidence = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 objId = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &objid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:badbot.messages.Coords)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:badbot.messages.Coords)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Coords::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:badbot.messages.Coords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 y = 1;
  if (this->y() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->y(), output);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // int32 h = 3;
  if (this->h() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(3, this->h(), output);
  }

  // int32 w = 4;
  if (this->w() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(4, this->w(), output);
  }

  // int32 confidence = 5;
  if (this->confidence() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->confidence(), output);
  }

  // int32 objId = 6;
  if (this->objid() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->objid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:badbot.messages.Coords)
}

::PROTOBUF_NAMESPACE_ID::uint8* Coords::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:badbot.messages.Coords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 y = 1;
  if (this->y() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->y(), target);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // int32 h = 3;
  if (this->h() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->h(), target);
  }

  // int32 w = 4;
  if (this->w() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->w(), target);
  }

  // int32 confidence = 5;
  if (this->confidence() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->confidence(), target);
  }

  // int32 objId = 6;
  if (this->objid() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->objid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:badbot.messages.Coords)
  return target;
}

size_t Coords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:badbot.messages.Coords)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 y = 1;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 h = 3;
  if (this->h() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->h());
  }

  // int32 w = 4;
  if (this->w() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->w());
  }

  // int32 confidence = 5;
  if (this->confidence() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->confidence());
  }

  // int32 objId = 6;
  if (this->objid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->objid());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:badbot.messages.Coords)
  GOOGLE_DCHECK_NE(&from, this);
  const Coords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Coords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:badbot.messages.Coords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:badbot.messages.Coords)
    MergeFrom(*source);
  }
}

void Coords::MergeFrom(const Coords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:badbot.messages.Coords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.confidence() != 0) {
    set_confidence(from.confidence());
  }
  if (from.objid() != 0) {
    set_objid(from.objid());
  }
}

void Coords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:badbot.messages.Coords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coords::CopyFrom(const Coords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:badbot.messages.Coords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coords::IsInitialized() const {
  return true;
}

void Coords::InternalSwap(Coords* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(y_, other->y_);
  swap(x_, other->x_);
  swap(h_, other->h_);
  swap(w_, other->w_);
  swap(confidence_, other->confidence_);
  swap(objid_, other->objid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Coords::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectDetectionCoords::InitAsDefaultInstance() {
}
class ObjectDetectionCoords::_Internal {
 public:
};

ObjectDetectionCoords::ObjectDetectionCoords()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:badbot.messages.ObjectDetectionCoords)
}
ObjectDetectionCoords::ObjectDetectionCoords(const ObjectDetectionCoords& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      coordinates_(from.coordinates_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_at_angle_ = from.object_at_angle_;
  // @@protoc_insertion_point(copy_constructor:badbot.messages.ObjectDetectionCoords)
}

void ObjectDetectionCoords::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto.base);
  object_at_angle_ = 0;
}

ObjectDetectionCoords::~ObjectDetectionCoords() {
  // @@protoc_insertion_point(destructor:badbot.messages.ObjectDetectionCoords)
  SharedDtor();
}

void ObjectDetectionCoords::SharedDtor() {
}

void ObjectDetectionCoords::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectDetectionCoords& ObjectDetectionCoords::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectDetectionCoords_obj_5fdet_5fcoords_2eproto.base);
  return *internal_default_instance();
}


void ObjectDetectionCoords::Clear() {
// @@protoc_insertion_point(message_clear_start:badbot.messages.ObjectDetectionCoords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coordinates_.Clear();
  object_at_angle_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ObjectDetectionCoords::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .badbot.messages.Coords coordinates = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_coordinates(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // int32 object_at_angle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          object_at_angle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ObjectDetectionCoords::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:badbot.messages.ObjectDetectionCoords)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .badbot.messages.Coords coordinates = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_coordinates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 object_at_angle = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_at_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:badbot.messages.ObjectDetectionCoords)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:badbot.messages.ObjectDetectionCoords)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ObjectDetectionCoords::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:badbot.messages.ObjectDetectionCoords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .badbot.messages.Coords coordinates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coordinates_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->coordinates(static_cast<int>(i)),
      output);
  }

  // int32 object_at_angle = 2;
  if (this->object_at_angle() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(2, this->object_at_angle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:badbot.messages.ObjectDetectionCoords)
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectDetectionCoords::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:badbot.messages.ObjectDetectionCoords)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .badbot.messages.Coords coordinates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->coordinates_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->coordinates(static_cast<int>(i)), target);
  }

  // int32 object_at_angle = 2;
  if (this->object_at_angle() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->object_at_angle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:badbot.messages.ObjectDetectionCoords)
  return target;
}

size_t ObjectDetectionCoords::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:badbot.messages.ObjectDetectionCoords)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .badbot.messages.Coords coordinates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->coordinates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->coordinates(static_cast<int>(i)));
    }
  }

  // int32 object_at_angle = 2;
  if (this->object_at_angle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->object_at_angle());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDetectionCoords::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:badbot.messages.ObjectDetectionCoords)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDetectionCoords* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectDetectionCoords>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:badbot.messages.ObjectDetectionCoords)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:badbot.messages.ObjectDetectionCoords)
    MergeFrom(*source);
  }
}

void ObjectDetectionCoords::MergeFrom(const ObjectDetectionCoords& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:badbot.messages.ObjectDetectionCoords)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coordinates_.MergeFrom(from.coordinates_);
  if (from.object_at_angle() != 0) {
    set_object_at_angle(from.object_at_angle());
  }
}

void ObjectDetectionCoords::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:badbot.messages.ObjectDetectionCoords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDetectionCoords::CopyFrom(const ObjectDetectionCoords& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:badbot.messages.ObjectDetectionCoords)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDetectionCoords::IsInitialized() const {
  return true;
}

void ObjectDetectionCoords::InternalSwap(ObjectDetectionCoords* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&coordinates_)->InternalSwap(CastToBase(&other->coordinates_));
  swap(object_at_angle_, other->object_at_angle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectDetectionCoords::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace badbot
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::badbot::messages::Coords* Arena::CreateMaybeMessage< ::badbot::messages::Coords >(Arena* arena) {
  return Arena::CreateInternal< ::badbot::messages::Coords >(arena);
}
template<> PROTOBUF_NOINLINE ::badbot::messages::ObjectDetectionCoords* Arena::CreateMaybeMessage< ::badbot::messages::ObjectDetectionCoords >(Arena* arena) {
  return Arena::CreateInternal< ::badbot::messages::ObjectDetectionCoords >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
